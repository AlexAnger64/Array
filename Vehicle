/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vehicle;

public class VehicleApp {
    public static void main (String[] args){
        
        //Create objects two of each class and input specs
        //Print instance
       
        System.out.println("\tCars");
        
        Car civic = new Car("Civic","Honda", 130, 5, 3000, 35);
        civic.setBrandName("Honda");
        civic.setStereo(true);
        System.out.println(civic);
        
        Car chiron = new Car("Chiron 300", "Bugatti", 300, 2, 2500, 12);
        chiron.setBrandName("Bugatti");
        chiron.setStereo(true);
        System.out.println(chiron);
        
        
        System.out.println("\tBoats");
        
        Boat wakeSet = new Boat("WakeSetter","Malibu", 40, 18, 10000, 10);
        wakeSet.setBrandName("Malibu");
        wakeSet.setStereo(true);
        System.out.println(wakeSet);
        
        
        Boat lsv = new Boat("LSV", "Malibu", 45, 10, 5000, 11);
        lsv.setBrandName("Malibu");
        lsv.setStereo(true);
        System.out.println(lsv);
        
        
        
        System.out.println("\tPlanes");
        
        plane sfs = new plane("757","Boeing", 400, 80, 100000, 2);
        sfs.setBrandName("Boeing");
        sfs.setJet(false);
        System.out.println(sfs);
        
        plane g5 = new plane("G550", "Gulfstream ", 400, 10, 5000, 2);
        g5.setBrandName("Gulfstream");
        g5.setJet(true);
        System.out.println(g5);
        
        
        System.out.println("\tMotorcycles");
        
        moto h2r = new moto("Ninja h2r","Kawasaki", 400, 1, 800, 30);
        h2r.setBrandName("Kawasaki");
        System.out.println(h2r);
        
        moto h2 = new moto("Ninja h2", "Kawasaki ", 400, 1, 800, 30);
        h2.setBrandName("Kawasaki");
        System.out.println(h2);
        
        System.out.println("\tTrains");
        
        train al = new train("Avelia Liberty","Alstom", 130, 400, 50000, 100);
        al.setBrandName("Alstom");
        System.out.println(al);
        
        train s8 = new train("Series 8", "Talgo ", 125, 400, 50000, 100);
        s8.setBrandName("Talgo");
        System.out.println(s8);
    }
}

/**
 *
 * @author aanger2024
 */
// The Base Vehicle Class, implements the Speedometer interface

class Vehicle implements Speedometer{
//base (Class wide) variables
protected String brandName = "";
protected double speed = 0.0;
protected int passengers = 0;
protected double cargoWeight = 0.0;
double mpg;
protected String mName = "";
//Base default constructor
public Vehicle(){
mName = "";
brandName = "";
speed = 0.0;
passengers = 0;
cargoWeight = 0.0;
mpg = 0;
}

public Vehicle(String inName, String inBrand, double inSpeed, int inPassengers, double
inCargo){
mName = inName;
brandName = inBrand;
speed = inSpeed;
passengers = inPassengers;
cargoWeight = inCargo;
}
//getters and setters
public Vehicle(String inBrand){
brandName = inBrand;
}
public String getBrand(){
return brandName;
}
public void setBrandName(String inBrand){
brandName = inBrand;
}
public double getSpeed(){
return speed;
}
public void setSpeed(double inSpeed){
speed = inSpeed;
}
public int getPassengers(){
return passengers;
}
public void setPassengers(int inPassengers){
speed = inPassengers;
}
public double getCargoWeight(){
return cargoWeight;
}
public void setCargoWeight(double inCargoWeight){
cargoWeight = inCargoWeight;
}
//Base toString
public String toString(){
String result = "";
result = "Model: \t\t" + mName + "\n" + "Brand: \t\t" + getBrand() + "\n" +
"Speed (mph): \t" + getSpeed() + "\n" +
"Passengers: \t" + getPassengers() + "\n" +
"Cargo (lbs): \t" + getCargoWeight() + "\n";
return result;
}
}
//the Speedometer interface to show the speed of any vehicle in the same way
interface Speedometer{
public void setSpeed(double inSpeed);
public double getSpeed();
}
   

// Car Class inherits from Vehicle Class
class Car extends Vehicle{
int wheels = 4;
String color = "White";
boolean spoiler = false;
boolean stereo = false;
double mpg; //has an extra variable, mpg

public Car(String inName, String inBrand, double inSpeed, int inPassengers, double inCargo, double inMPG){
 //also include the extra variable in the Car constructor
 super(inName, inBrand, inSpeed, inPassengers, inCargo);
        mpg = inMPG;

}
public void setSpoiler(boolean inSpoiler){
spoiler = inSpoiler;
}
public boolean getSpoiler(){
return spoiler;
}
//another additional variable
public void setStereo(boolean inStereo){
stereo = inStereo;
}
public String getStereo(){
if (stereo = true) {
   return "Yes";
}
else {
    return "No";
}
}
//overrides the super getSpeed method
@Override
public double getSpeed() {
    
if (spoiler){
    
return super.getSpeed() + 20;
}   
    
else {
    return super.getSpeed();
}
}
public void setMpg(double mpg, double inMPG) {


this.mpg = mpg;

//another additional variable
}



public double getMPG(){
if(stereo){
    mpg = mpg/10;
}
return mpg;
}
//usesd the super toString, as well as addingnthe new variable to it.
public String toString(){
String result = super.toString() +
"MPG :\t\t" + this.getMPG() + "\n" + "Wheels :\t" + wheels + "\n" + "Stereo :\t" + getStereo() + "\n";
return result ;
}
 //uses the super
}


class Boat extends Vehicle{
int motors = 4;
int wheels = 1;

boolean stereo = false;
double mpg; //has an extra variable, mpg

public Boat(String inName, String inBrand, double inSpeed, int inPassengers, double inCargo, double inMPG){
 //also include the extra variable in the Car constructor
 super(inName, inBrand, inSpeed, inPassengers, inCargo);
        mpg = inMPG;

}

//another additional variable
public void setStereo(boolean inStereo){
stereo = inStereo;
}
public boolean getStereo(){
return stereo;
}
//overrides the super getSpeed method
@Override
public double getSpeed() {
return speed;   

}
public void setMpg(double mpg, double inMPG) {


this.mpg = mpg;

//another additional variable
}



public double getMPG(){
if(stereo){
    mpg = mpg/10;
}
return mpg;
}
//usesd the super toString, as well as addingnthe new variable to it.
//Outputs mpg and stereo
public String toString(){
String result = super.toString() +
"MPG :\t\t" + this.getMPG() + "\n" + "Stereo:\t\t" + stereo + "\n";
return result ;
}
}
class train extends Vehicle{

String color = "White";
boolean stereo = false;
double mpg; //has an extra variable, mpg

public train(String inName, String inBrand, double inSpeed, int inPassengers, double inCargo, double inMPG){
 //also include the extra variable in the Car constructor
 super(inName, inBrand, inSpeed, inPassengers, inCargo);
        mpg = inMPG;

}

//another additional variable

//overrides the super getSpeed method

public void setMpg(double mpg, double inMPG) {


this.mpg = mpg;

//another additional variable
}



public double getMPG(){
if(stereo){
    mpg = mpg/10;
}
return mpg;
}
//usesd the super toString, as well as addingnthe new variable to it.
public String toString(){
String result = super.toString() +
"MPG :\t\t" + this.getMPG() + "\n";
return result ;
}
 //uses the super
}
class moto extends Vehicle{
int wheels = 4;
String color = "White";
boolean spoiler = false;
boolean stereo = false;
double mpg; //has an extra variable, mpg
int cylinders = 2;

public moto(String inName, String inBrand, double inSpeed, int inPassengers, double inCargo, double inMPG){
 //also include the extra variable in the Car constructor
 super(inName, inBrand, inSpeed, inPassengers, inCargo);
        mpg = inMPG;

}
public void setV(int inV){
cylinders = inV;
}
public int getV(){
return cylinders;
}
//another additional variable
public void setStereo(boolean inStereo){
stereo = inStereo;
}
public boolean getStereo(){
return stereo;
}
//overrides the super getSpeed method
@Override
public double getSpeed() {
    
return speed;
}
public void setMpg(double mpg, double inMPG) {


this.mpg = mpg;

//another additional variable
}



public double getMPG(){
if(stereo){
    mpg = mpg/10;
}
return mpg;
}
//usesd the super toString, as well as addingnthe new variable to it.
public String toString(){
String result = super.toString() +
"MPG :\t\t" + this.getMPG() + "\n" + "Stereo :\t" + stereo + "\n";
return result;
}
 //uses the super
}

class plane extends Vehicle{
int wheels = 4;
String color = "White";
boolean jetPlace = false; //extra variable for jet placement
String jet;
boolean stereo = false;
double mpg; //has an extra variable, mpg

public plane(String inName, String inBrand, double inSpeed, int inPassengers, double inCargo, double inMPG){
 //also include the extra variable in the Car constructor
 super(inName, inBrand, inSpeed, inPassengers, inCargo);
        mpg = inMPG;

}
public void setJet(boolean inJet){
    jetPlace = inJet;
    

}
public String getJet(){
    if (jetPlace) 
    {jet = "Rear";
    }   
    else {jet = "Wings";}
    return jet;
    
    
}
//another additional variable
public void setStereo(boolean inStereo){
stereo = inStereo;
}
public boolean getStereo(){
return stereo;
}
//overrides the super getSpeed method


public void setMpg(double mpg, double inMPG) {


this.mpg = mpg;

//another additional variable
}



public double getMPG(){
if(stereo){
    mpg = mpg/10;
}
return mpg;
}

//usesd the super toString, as well as addingnthe new variable to it.
public String toString(){
String result = super.toString() +
"Jet Location:\t" + this.getJet() + "\n";
return result;
}
 //uses the super
}


